{"version":3,"sources":["UI/InnerWrapper.js","SubscriptionModal/SubscriptionModal.js","UI/Button.js","SubscriptionCard/SubscriptionCard.js","UI/static-top-of-page.js","UI/static-extra-stuff.js","App.js","index.js"],"names":["InnerWrap","props","className","children","SubscribeModal","useState","showSignup","setShowSignup","onClick","closeModal","subscriptions","map","subscription","title","id","onUnsubscribe","htmlFor","type","placeholder","onChange","e","target","value","length","SubscribeButton","isClickable","checkForSubscriptions","onClearSelection","SubscriptionCard","isChecked","handleUpdateSubscription","subscriptionClass","src","event","checked","TopOfPage","ExtraStuff","class","App","setSubscriptions","showModal","setShowModal","showSubmitButton","setShowSubmitButton","Math","random","cards","setCards","useEffect","_subscriptions","filter","card","updateSubscriptionCheckedState","isSubscribed","tmp","find","_cards","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43ae1dae.chunk.js","sourcesContent":["const InnerWrap = props => {\n  return (\n    <div className=\"inner-wrap\">{props.children}</div>\n  )\n}\n\nexport default InnerWrap;","import React, { useState } from 'react';\n\nconst SubscribeModal = props => {\n  const [showSignup, setShowSignup] = useState(false);\n  const handleUnsubscribe = (id) => {\n    props.onUnsubscribe(id, false)\n  }\n  const handleShowSignup = e => {\n    if (e.target.value.length > 0) setShowSignup(true);\n    else setShowSignup(false);\n  }\n  return (\n    <div className=\"subscribe-modal\">\n      <div className=\"subscribe-modal-contents\">\n        <span className=\"close-modal\" onClick={props.closeModal}>Close Modal</span>\n        <h2>You are subscribing to:</h2>\n        <ul>\n          {props.subscriptions.map(subscription => {\n            return <li key={subscription.id}>{subscription.title} <span className=\"remove-subscription\" onClick={() => handleUnsubscribe(subscription.id)}>(X)</span></li>\n          })}\n        </ul>\n        <label htmlFor=\"email\">Please enter your Email address to subscribe or email/password to sign up</label><br />\n        <input type=\"email\" id=\"email\" placeholder=\"email\" />\n        <input type=\"password\" id=\"password\" onChange={handleShowSignup} placeholder=\"password\" /><br />\n\n        {showSignup && <button type=\"submit\" className=\"signup\">Sign Up</button>}\n        <button type=\"submit\" className=\"subscribe-button\">Subscribe</button>\n      </div>\n    </div>\n  )\n}\n\nexport default SubscribeModal;","import React from 'react';\nimport InnerWrap from './InnerWrapper';\n\nconst SubscribeButton = ({isClickable, checkForSubscriptions, onClearSelection}) => {\n  return (\n    <div className=\"subscribe-bar\">\n      <InnerWrap>\n        <button className={isClickable ? 'active' : ''} type=\"button\" onClick={onClearSelection}>Clear Selections</button>\n        <button className={isClickable ? 'active' : '' } type=\"button\" onClick={checkForSubscriptions}>Review Subscriptions</button>\n      </InnerWrap>\n    </div>\n  )  \n}\n\nexport default SubscribeButton;","const SubscriptionCard = ({id, title, isChecked, handleUpdateSubscription}) => {\n  const handleSubscribe = event => {\n    handleUpdateSubscription(id, event.target.checked)\n  }\n  let subscriptionClass = isChecked ? \"isSubscribed subscription\" : \"subscription\"\n  return (\n    <div className={subscriptionClass}>\n      <img src=\"https://via.placeholder.com/200x100\" />\n      <div className=\"inner\">\n        <h3 className=\"title\">{title}</h3>\n        <p>(Quarterly) The most popular content on bcg.com.</p>\n      </div>\n      <div className=\"inputs\">\n        <input type=\"checkbox\" onChange={handleSubscribe} checked={isChecked} id={id}/>\n        <label htmlFor={id}>Subscribe</label>\n      </div>\n     </div>  \n   )\n}\n\nexport default SubscriptionCard;","import InnerWrap from './InnerWrapper';\nconst TopOfPage = () => {\n  return (\n    <div className=\"top-of-page\">\n      <InnerWrap>\n        <h1>Subscriptions</h1>\n        <div className=\"subtitle\">Stay connected with BCG's latest content. Select from our newsletters below and enter your email to subscribe.</div>\n        <h2>Featured Newsletters</h2>\n      </InnerWrap>\n    </div>\n  )\n}\n\nexport default TopOfPage;","import InnerWrap from './InnerWrapper';\n\nconst ExtraStuff = () => {\n  return (\n    <div className=\"extra-stuff\">\n        <InnerWrap>\n          <div className=\"column\">\n            <h2>E-Alerts</h2>\n            <p>(Monthly) The latest BCG content, curated based on your specified areas of interest. Select your topics below</p>\n            <div class=\"dropdown\"> Select Industries</div>\n            <div class=\"dropdown\"> Select Business Topic</div>\n          </div>\n          <div className=\"column\">\n            <h2>Regional Publications</h2>\n            <input type=\"checkbox\" />\n            <label>BCG Bytes from Australia and New Zealand</label>\n            <p className=\"lighter\">(Biweekly) Stay connected to ANZ's business updates and regional focus topics.</p>\n          </div>\n        </InnerWrap>\n      </div>\n  )\n}\n\nexport default ExtraStuff;","import React, {useEffect, useState} from 'react';\nimport InnerWrap from './UI/InnerWrapper';\nimport SubscribeModal from './SubscriptionModal/SubscriptionModal';\nimport SubscribeButton from './UI/Button';\nimport SubscriptionCard from './SubscriptionCard/SubscriptionCard';\nimport TopOfPage from './UI/static-top-of-page';\nimport ExtraStuff from './UI/static-extra-stuff';\nimport './App.css';\n\nconst App = () => {\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [showSubmitButton, setShowSubmitButton] = useState(false);\n  const [cards, setCards] = useState([\n    {\n      title: 'Top Ten Most Read',\n      id: Math.random(),\n      isChecked: false\n    },{\n      title: 'Featured Insights',\n      id: Math.random(),\n      isChecked: false\n    },{\n      title: 'BCG Henderson Institute',\n      id: Math.random(),\n      isChecked: false\n    },{\n      title: 'Change Your Trajectory',\n      id: Math.random(),\n      isChecked: false\n    },{\n      title: 'Leadership By Design',\n      id: Math.random(),\n      isChecked: false\n    },{\n      title: 'Next-Gen Work',\n      id: Math.random(),\n      isChecked: false\n    },{\n      title: 'Perspectives on Strategy and Value',\n      id: Math.random(),\n      isChecked: false\n    },{\n      title: 'Shape the Future of Health Cars',\n      id: Math.random(),\n      isChecked: false\n    }\n  ])\n\n  useEffect(() => {\n    setShowSubmitButton(subscriptions.length > 0);\n\n    if (subscriptions.length === 0) setShowModal(false);\n  }, [subscriptions]);\n  \n  useEffect(() => {\n    let _subscriptions = cards.filter(card => {\n      return card.isChecked === true;\n    });\n    \n    setSubscriptions(_subscriptions);\n  }, [cards]);\n\n  const clearSelections = () => {\n    let _cards = [...cards];\n    _cards.map(card => {\n      return card.isChecked = false;\n    })\n    setCards(_cards);\n  }\n\n  const closeModal = () => {\n    setShowModal(false);\n  }\n\n  const updateSubscriptionCheckedState = (id, isSubscribed) => {\n    let tmp = [...cards];\n    tmp.find(card => card.id === id).isChecked = isSubscribed;\n    setCards(tmp);\n  }\n  \n  return (\n    <>\n      <TopOfPage />\n\n      <div className=\"subscriptions\">\n        <InnerWrap>\n          {cards.map(card => <SubscriptionCard \n                               key={card.id} \n                               id={card.id} \n                               isChecked={card.isChecked} \n                               handleUpdateSubscription={updateSubscriptionCheckedState} \n                               title={card.title}/>)}\n        </InnerWrap>\n      </div>\n\n      {showModal && <SubscribeModal subscriptions={subscriptions} closeModal={closeModal} onUnsubscribe={updateSubscriptionCheckedState}/>}\n      <SubscribeButton checkForSubscriptions={() => { setShowModal(true) }} isClickable={showSubmitButton} onClearSelection={clearSelections}/>\n\n      <ExtraStuff />\n    </>\n   )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}