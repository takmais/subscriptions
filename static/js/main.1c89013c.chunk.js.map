{"version":3,"sources":["UI/InnerWrapper.js","SubscriptionModal/SubscriptionModal.js","UI/Button.js","SubscriptionCard/SubscriptionCard.js","App.js","index.js"],"names":["InnerWrap","props","className","children","SubscribeModal","htmlFor","type","id","subscriptions","map","subscription","title","SubscribeButton","isClickable","onClick","checkForSubscriptions","SubscriptionCard","subscriptionClass","isChecked","src","onChange","event","handleUpdateSubscription","target","checked","App","useState","setSubscriptions","showModal","setShowModal","Math","random","cards","setCards","updateSubscriptionCheckedState","isSubscribed","console","group","log","groupEnd","obj","find","card","cardIndex","indexOf","temp_state","temp_element","_subscriptions","filter","updateSubscribedList","length","ReactDOM","render","document","getElementById"],"mappings":"+NAMeA,EANG,SAAAC,GAChB,OACE,qBAAKC,UAAU,aAAf,SAA6BD,EAAME,YCexBC,EAfQ,SAAAH,GACrB,OACE,qBAAKC,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,yDACA,uBAAOG,QAAQ,QAAf,mBACA,uBAAOC,KAAK,OAAOC,GAAG,UACrBN,EAAMO,cAAcC,KAAI,SAAAC,GACvB,OAAO,6BAA2BA,EAAaC,OAA/BD,EAAaH,aCGxBK,EAVS,SAAAX,GACtB,OACE,qBAAKC,UAAU,gBAAf,SACE,cAAC,EAAD,UACE,wBAAQA,UAAiC,WAAtBD,EAAMY,aAA4B,SAAUP,KAAK,SAASQ,QAASb,EAAMc,sBAA5F,uCCaOC,EApBU,SAAAf,GACvB,IAGIgB,EAAoBhB,EAAMiB,UAAY,4BAA8B,eACxE,OACE,sBAAKhB,UAAWe,EAAhB,UACE,qBAAKE,IAAI,wCACT,sBAAKjB,UAAU,QAAf,UACE,oBAAIA,UAAU,QAAd,SAAuBD,EAAMU,QAC7B,oFAEF,sBAAKT,UAAU,SAAf,UACE,uBAAOI,KAAK,WAAWc,SAZL,SAAAC,GACtBpB,EAAMqB,yBAAyBrB,EAAMM,GAAIc,EAAME,OAAOC,YAYlD,qDCgFOC,G,MAvFH,WACV,MAA0CC,mBAAS,IAAnD,mBAAOlB,EAAP,KAAsBmB,EAAtB,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA0BH,mBAAS,CACjC,CACEf,MAAO,oBACPJ,GAAIuB,KAAKC,SACTb,WAAW,GACX,CACAP,MAAO,oBACPJ,GAAIuB,KAAKC,SACTb,WAAW,GACX,CACAP,MAAO,0BACPJ,GAAIuB,KAAKC,SACTb,WAAW,GACX,CACAP,MAAO,yBACPJ,GAAIuB,KAAKC,SACTb,WAAW,GACX,CACAP,MAAO,uBACPJ,GAAIuB,KAAKC,SACTb,WAAW,GACX,CACAP,MAAO,gBACPJ,GAAIuB,KAAKC,SACTb,WAAW,GACX,CACAP,MAAO,qCACPJ,GAAIuB,KAAKC,SACTb,WAAW,KA5Bf,mBAAOc,EAAP,KAAcC,EAAd,KA+CMC,EAAiC,SAAC3B,EAAI4B,GAC1CC,QAAQC,QACRD,QAAQE,IAAI,wCACZF,QAAQE,IAAI,OAAQ/B,GACpB6B,QAAQE,IAAI,iBAAkBH,GAC9BC,QAAQG,WAGR,IAAIC,EAAMR,EAAMS,MAAK,SAAAC,GAAI,OAAIA,EAAKnC,KAAOA,KACrCoC,EAAYX,EAAMY,QAAQJ,GAC1BK,EAAU,YAAOb,GACjBc,EAAY,eAAQD,EAAWF,IACnCG,EAAa5B,UAAYiB,EACzBU,EAAWF,GAAaG,EAExBb,EAASY,GA1BkB,WAC3B,IAAIE,EAAiBf,EAAMgB,QAAO,SAAAN,GAChC,OAA0B,IAAnBA,EAAKxB,aAGdkB,QAAQE,IAAI,mBAAoBS,GAChCpB,EAAiBoB,GAEjBX,QAAQE,IAAI,kBAAmB9B,GAmB/ByC,IAGF,OACE,qCACE,qBAAK/C,UAAU,gBAAf,SACE,cAAC,EAAD,UACG8B,EAAMvB,KAAI,SAAAiC,GAAI,OAAI,cAAC,EAAD,CAEEnC,GAAImC,EAAKnC,GACTW,UAAWwB,EAAKxB,UAChBI,yBAA0BY,EAC1BvB,MAAO+B,EAAK/B,OAJP+B,EAAKnC,WAOlCqB,GAAa,cAAC,EAAD,CAAgBpB,cAAeA,IAC7C,cAAC,EAAD,CAAiBO,sBA/CW,WAC1BP,EAAc0C,OAAS,GAAGrB,GAAa,IA8CwBhB,YAAaL,EAAc0C,OAAS,GAAK,gBCpFhHC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1c89013c.chunk.js","sourcesContent":["const InnerWrap = props => {\n  return (\n    <div className=\"inner-wrap\">{props.children}</div>\n  )\n}\n\nexport default InnerWrap;","import React from 'react';\n\nconst SubscribeModal = props => {\n  return (\n    <div className=\"subscribe-modal\">\n      <div className=\"subscribe-modal-contents\">\n        <h2>You are subscribing to:</h2>\n        <label htmlFor=\"email\">Email</label>\n        <input type=\"text\" id=\"email\" />\n        {props.subscriptions.map(subscription => {\n          return <li key={subscription.id}>{subscription.title}</li>\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default SubscribeModal;","import React from 'react';\nimport InnerWrap from './InnerWrapper';\n\nconst SubscribeButton = props => {\n  return (\n    <div className=\"subscribe-bar\">\n      <InnerWrap>\n        <button className={props.isClickable === 'active' && 'active'} type=\"button\" onClick={props.checkForSubscriptions}>Review Subscriptions</button>\n      </InnerWrap>\n    </div>\n  )  \n}\n\nexport default SubscribeButton;","const SubscriptionCard = props => {\n  const handleSubscribe = event => {\n    props.handleUpdateSubscription(props.id, event.target.checked)\n  }\n  let subscriptionClass = props.isChecked ? \"isSubscribed subscription\" : \"subscription\"\n  return (\n    <div className={subscriptionClass}>\n      <img src=\"https://via.placeholder.com/200x100\" />\n      <div className=\"inner\">\n        <h3 className=\"title\">{props.title}</h3>\n        <p>(Quarterly) The most popular content on bcg.com.</p>\n      </div>\n      <div className=\"inputs\">\n        <input type=\"checkbox\" onChange={handleSubscribe} />\n        <label>Subscribe</label>\n      </div>\n     </div>  \n   )\n}\n\nexport default SubscriptionCard;","import React, {useState} from 'react';\nimport InnerWrap from './UI/InnerWrapper';\nimport SubscribeModal from './SubscriptionModal/SubscriptionModal';\nimport SubscribeButton from './UI/Button';\nimport SubscriptionCard from './SubscriptionCard/SubscriptionCard';\nimport './App.css';\n\nconst App = () => {\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [cards, setCards] = useState([\n    {\n      title: 'Top Ten Most Read',\n      id: Math.random(),\n      isChecked: false\n    },{\n      title: 'Featured Insights',\n      id: Math.random(),\n      isChecked: false\n    },{\n      title: 'BCG Henderson Institute',\n      id: Math.random(),\n      isChecked: false\n    },{\n      title: 'Change Your Trajectory',\n      id: Math.random(),\n      isChecked: false\n    },{\n      title: 'Leadership By Design',\n      id: Math.random(),\n      isChecked: false\n    },{\n      title: 'Next-Gen Work',\n      id: Math.random(),\n      isChecked: false\n    },{\n      title: 'Perspectives on Strategy and Value',\n      id: Math.random(),\n      isChecked: false\n    }\n  ])\n  \n  const onCheckForSubscriptions = () => {\n    if (subscriptions.length > 0) setShowModal(true);\n  }\n  \n  const updateSubscribedList = () => {\n    let _subscriptions = cards.filter(card => {\n      return card.isChecked === true;\n    });\n    \n    console.log('_subscriptions: ', _subscriptions);\n    setSubscriptions(_subscriptions);\n    \n    console.log('subscriptions: ', subscriptions);\n  }\n  \n  const updateSubscriptionCheckedState = (id, isSubscribed) => {\n    console.group();\n    console.log('updating subscriptions Checked State');\n    console.log('id: ', id);\n    console.log('isSubscribed: ', isSubscribed);\n    console.groupEnd();\n    \n    // https://www.codegrepper.com/code-examples/javascript/react+state+array+of+objects\n    let obj = cards.find(card => card.id === id);\n    let cardIndex = cards.indexOf(obj);\n    let temp_state = [...cards];\n    let temp_element = { ...temp_state[cardIndex] };\n    temp_element.isChecked = isSubscribed\n    temp_state[cardIndex] = temp_element;\n    \n    setCards(temp_state);\n    updateSubscribedList();\n  }\n  \n  return (\n    <>\n      <div className=\"subscriptions\">\n        <InnerWrap>\n          {cards.map(card => <SubscriptionCard \n                               key={card.id} \n                               id={card.id} \n                               isChecked={card.isChecked} \n                               handleUpdateSubscription={updateSubscriptionCheckedState} \n                               title={card.title}/>)}\n        </InnerWrap>\n      </div>\n      {showModal && <SubscribeModal subscriptions={subscriptions}/>}\n      <SubscribeButton checkForSubscriptions={onCheckForSubscriptions} isClickable={subscriptions.length > 0 && 'active'} />\n    </>\n   )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}