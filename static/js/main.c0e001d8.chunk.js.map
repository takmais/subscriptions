{"version":3,"sources":["UI/InnerWrapper.js","SubscriptionModal/SubscriptionModal.js","UI/Button.js","SubscriptionCard/SubscriptionCard.js","App.js","index.js"],"names":["InnerWrap","props","className","children","SubscribeModal","htmlFor","type","id","subscriptions","map","subscription","title","SubscribeButton","isClickable","checkForSubscriptions","onClick","SubscriptionCard","isChecked","handleUpdateSubscription","subscriptionClass","src","onChange","event","target","checked","App","useState","setSubscriptions","showModal","setShowModal","showSubmitButton","setShowSubmitButton","Math","random","cards","setCards","useEffect","length","_subscriptions","filter","card","updateSubscriptionCheckedState","isSubscribed","console","group","log","groupEnd","tmp","find","ReactDOM","render","document","getElementById"],"mappings":"wNAMeA,EANG,SAAAC,GAChB,OACE,qBAAKC,UAAU,aAAf,SAA6BD,EAAME,YCexBC,EAfQ,SAAAH,GACrB,OACE,qBAAKC,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,yDACA,uBAAOG,QAAQ,QAAf,mBACA,uBAAOC,KAAK,OAAOC,GAAG,UACrBN,EAAMO,cAAcC,KAAI,SAAAC,GACvB,OAAO,6BAA2BA,EAAaC,OAA/BD,EAAaH,aCGxBK,EAVS,SAAC,GAA0C,IAAzCC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,sBACrC,OACE,qBAAKZ,UAAU,gBAAf,SACE,cAAC,EAAD,UACE,wBAAQA,UAAWW,EAAc,SAAW,GAAKP,KAAK,SAASS,QAASD,EAAxE,uCCaOE,EApBU,SAAC,GAAsD,IAArDT,EAAoD,EAApDA,GAAII,EAAgD,EAAhDA,MAAOM,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,yBAI3CC,EAAoBF,EAAY,4BAA8B,eAClE,OACE,sBAAKf,UAAWiB,EAAhB,UACE,qBAAKC,IAAI,wCACT,sBAAKlB,UAAU,QAAf,UACE,oBAAIA,UAAU,QAAd,SAAuBS,IACvB,oFAEF,sBAAKT,UAAU,SAAf,UACE,uBAAOI,KAAK,WAAWe,SAZL,SAAAC,GACtBJ,EAAyBX,EAAIe,EAAMC,OAAOC,YAYtC,qDCwEOC,G,MA/EH,WACV,MAA0CC,mBAAS,IAAnD,mBAAOlB,EAAP,KAAsBmB,EAAtB,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAgDH,oBAAS,GAAzD,mBAAOI,EAAP,KAAyBC,EAAzB,KACA,EAA0BL,mBAAS,CACjC,CACEf,MAAO,oBACPJ,GAAIyB,KAAKC,SACThB,WAAW,GACX,CACAN,MAAO,oBACPJ,GAAIyB,KAAKC,SACThB,WAAW,GACX,CACAN,MAAO,0BACPJ,GAAIyB,KAAKC,SACThB,WAAW,GACX,CACAN,MAAO,yBACPJ,GAAIyB,KAAKC,SACThB,WAAW,GACX,CACAN,MAAO,uBACPJ,GAAIyB,KAAKC,SACThB,WAAW,GACX,CACAN,MAAO,gBACPJ,GAAIyB,KAAKC,SACThB,WAAW,GACX,CACAN,MAAO,qCACPJ,GAAIyB,KAAKC,SACThB,WAAW,KA5Bf,mBAAOiB,EAAP,KAAcC,EAAd,KAgCAC,qBAAU,WACRL,EAAoBvB,EAAc6B,OAAS,KAC1C,CAAC7B,IAEJ4B,qBAAU,WACR,IAAIE,EAAiBJ,EAAMK,QAAO,SAAAC,GAChC,OAA0B,IAAnBA,EAAKvB,aAGdU,EAAiBW,KAChB,CAACJ,IAEJ,IAAMO,EAAiC,SAAClC,EAAImC,GAC1CC,QAAQC,QACRD,QAAQE,IAAI,wCACZF,QAAQE,IAAI,OAAQtC,GACpBoC,QAAQE,IAAI,iBAAkBH,GAC9BC,QAAQG,WAGR,IAAIC,EAAG,YAAOb,GACda,EAAIC,MAAK,SAAAR,GAAI,OAAIA,EAAKjC,KAAOA,KAAIU,UAAYyB,EAC7CP,EAASY,IAGX,OACE,qCACE,qBAAK7C,UAAU,gBAAf,SACE,cAAC,EAAD,UACGgC,EAAMzB,KAAI,SAAA+B,GAAI,OAAI,cAAC,EAAD,CAEEjC,GAAIiC,EAAKjC,GACTU,UAAWuB,EAAKvB,UAChBC,yBAA0BuB,EAC1B9B,MAAO6B,EAAK7B,OAJP6B,EAAKjC,WAOlCqB,GAAa,cAAC,EAAD,CAAgBpB,cAAeA,IAC7C,cAAC,EAAD,CAAiBM,sBAAuB,WAAQe,GAAa,IAAShB,YAAaiB,SC5EzFmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c0e001d8.chunk.js","sourcesContent":["const InnerWrap = props => {\n  return (\n    <div className=\"inner-wrap\">{props.children}</div>\n  )\n}\n\nexport default InnerWrap;","import React from 'react';\n\nconst SubscribeModal = props => {\n  return (\n    <div className=\"subscribe-modal\">\n      <div className=\"subscribe-modal-contents\">\n        <h2>You are subscribing to:</h2>\n        <label htmlFor=\"email\">Email</label>\n        <input type=\"text\" id=\"email\" />\n        {props.subscriptions.map(subscription => {\n          return <li key={subscription.id}>{subscription.title}</li>\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default SubscribeModal;","import React from 'react';\nimport InnerWrap from './InnerWrapper';\n\nconst SubscribeButton = ({isClickable, checkForSubscriptions}) => {\n  return (\n    <div className=\"subscribe-bar\">\n      <InnerWrap>\n        <button className={isClickable ? 'active' : '' } type=\"button\" onClick={checkForSubscriptions}>Review Subscriptions</button>\n      </InnerWrap>\n    </div>\n  )  \n}\n\nexport default SubscribeButton;","const SubscriptionCard = ({id, title, isChecked, handleUpdateSubscription}) => {\n  const handleSubscribe = event => {\n    handleUpdateSubscription(id, event.target.checked)\n  }\n  let subscriptionClass = isChecked ? \"isSubscribed subscription\" : \"subscription\"\n  return (\n    <div className={subscriptionClass}>\n      <img src=\"https://via.placeholder.com/200x100\" />\n      <div className=\"inner\">\n        <h3 className=\"title\">{title}</h3>\n        <p>(Quarterly) The most popular content on bcg.com.</p>\n      </div>\n      <div className=\"inputs\">\n        <input type=\"checkbox\" onChange={handleSubscribe} />\n        <label>Subscribe</label>\n      </div>\n     </div>  \n   )\n}\n\nexport default SubscriptionCard;","import React, {useEffect, useState} from 'react';\nimport InnerWrap from './UI/InnerWrapper';\nimport SubscribeModal from './SubscriptionModal/SubscriptionModal';\nimport SubscribeButton from './UI/Button';\nimport SubscriptionCard from './SubscriptionCard/SubscriptionCard';\nimport './App.css';\n\nconst App = () => {\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [showSubmitButton, setShowSubmitButton] = useState(false);\n  const [cards, setCards] = useState([\n    {\n      title: 'Top Ten Most Read',\n      id: Math.random(),\n      isChecked: false\n    },{\n      title: 'Featured Insights',\n      id: Math.random(),\n      isChecked: false\n    },{\n      title: 'BCG Henderson Institute',\n      id: Math.random(),\n      isChecked: false\n    },{\n      title: 'Change Your Trajectory',\n      id: Math.random(),\n      isChecked: false\n    },{\n      title: 'Leadership By Design',\n      id: Math.random(),\n      isChecked: false\n    },{\n      title: 'Next-Gen Work',\n      id: Math.random(),\n      isChecked: false\n    },{\n      title: 'Perspectives on Strategy and Value',\n      id: Math.random(),\n      isChecked: false\n    }\n  ])\n\n  useEffect(() => {\n    setShowSubmitButton(subscriptions.length > 0);\n  }, [subscriptions]);\n  \n  useEffect(() => {\n    let _subscriptions = cards.filter(card => {\n      return card.isChecked === true;\n    });\n    \n    setSubscriptions(_subscriptions);\n  }, [cards]);\n  \n  const updateSubscriptionCheckedState = (id, isSubscribed) => {\n    console.group();\n    console.log('updating subscriptions Checked State');\n    console.log('id: ', id);\n    console.log('isSubscribed: ', isSubscribed);\n    console.groupEnd();\n    \n    // https://www.codegrepper.com/code-examples/javascript/react+state+array+of+objects\n    let tmp = [...cards];\n    tmp.find(card => card.id === id).isChecked = isSubscribed;\n    setCards(tmp);\n  }\n  \n  return (\n    <>\n      <div className=\"subscriptions\">\n        <InnerWrap>\n          {cards.map(card => <SubscriptionCard \n                               key={card.id} \n                               id={card.id} \n                               isChecked={card.isChecked} \n                               handleUpdateSubscription={updateSubscriptionCheckedState} \n                               title={card.title}/>)}\n        </InnerWrap>\n      </div>\n      {showModal && <SubscribeModal subscriptions={subscriptions}/>}\n      <SubscribeButton checkForSubscriptions={() => { setShowModal(true) }} isClickable={showSubmitButton} />\n    </>\n   )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}