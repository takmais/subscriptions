{"version":3,"sources":["UI/InnerWrapper.js","SubscriptionModal/SubscriptionModal.js","UI/Button.js","SubscriptionCard/SubscriptionCard.js","App.js","index.js"],"names":["InnerWrap","props","className","children","SubscribeModal","onClick","closeModal","htmlFor","type","id","subscriptions","map","subscription","title","onUnsubscribe","SubscribeButton","isClickable","checkForSubscriptions","onClearSelection","SubscriptionCard","isChecked","handleUpdateSubscription","subscriptionClass","src","onChange","event","target","checked","App","useState","setSubscriptions","showModal","setShowModal","showSubmitButton","setShowSubmitButton","Math","random","cards","setCards","useEffect","length","_subscriptions","filter","card","updateSubscriptionCheckedState","isSubscribed","tmp","find","_cards","class","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a39941e5.chunk.js","sourcesContent":["const InnerWrap = props => {\n  return (\n    <div className=\"inner-wrap\">{props.children}</div>\n  )\n}\n\nexport default InnerWrap;","import React, { useEffect } from 'react';\n\nconst SubscribeModal = props => {\n  const handleUnsubscribe = (id) => {\n    props.onUnsubscribe(id, false)\n  }\n  return (\n    <div className=\"subscribe-modal\">\n      <div className=\"subscribe-modal-contents\">\n        <span className=\"close-modal\" onClick={props.closeModal}>Close Modal</span>\n        <h2>You are subscribing to:</h2>\n        <label htmlFor=\"email\">Email</label>\n        <input type=\"text\" id=\"email\" />\n        <ul>\n          {props.subscriptions.map(subscription => {\n            return <li key={subscription.id}>{subscription.title} <span className=\"remove-subscription\" onClick={() => handleUnsubscribe(subscription.id)}>(X)</span></li>\n          })}\n        </ul>\n        <button type=\"submit\" className=\"subscribe-button\">Subscribe</button>\n      </div>\n    </div>\n  )\n}\n\nexport default SubscribeModal;","import React from 'react';\nimport InnerWrap from './InnerWrapper';\n\nconst SubscribeButton = ({isClickable, checkForSubscriptions, onClearSelection}) => {\n  return (\n    <div className=\"subscribe-bar\">\n      <InnerWrap>\n        <button className={isClickable ? 'active' : ''} type=\"button\" onClick={onClearSelection}>Clear Selections</button>\n        <button className={isClickable ? 'active' : '' } type=\"button\" onClick={checkForSubscriptions}>Review Subscriptions</button>\n      </InnerWrap>\n    </div>\n  )  \n}\n\nexport default SubscribeButton;","const SubscriptionCard = ({id, title, isChecked, handleUpdateSubscription}) => {\n  const handleSubscribe = event => {\n    handleUpdateSubscription(id, event.target.checked)\n  }\n  let subscriptionClass = isChecked ? \"isSubscribed subscription\" : \"subscription\"\n  return (\n    <div className={subscriptionClass}>\n      <img src=\"https://via.placeholder.com/200x100\" />\n      <div className=\"inner\">\n        <h3 className=\"title\">{title}</h3>\n        <p>(Quarterly) The most popular content on bcg.com.</p>\n      </div>\n      <div className=\"inputs\">\n        <input type=\"checkbox\" onChange={handleSubscribe} checked={isChecked} id={id}/>\n        <label htmlFor={id}>Subscribe</label>\n      </div>\n     </div>  \n   )\n}\n\nexport default SubscriptionCard;","import React, {useEffect, useState} from 'react';\nimport InnerWrap from './UI/InnerWrapper';\nimport SubscribeModal from './SubscriptionModal/SubscriptionModal';\nimport SubscribeButton from './UI/Button';\nimport SubscriptionCard from './SubscriptionCard/SubscriptionCard';\nimport './App.css';\n\nconst App = () => {\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [showSubmitButton, setShowSubmitButton] = useState(false);\n  const [cards, setCards] = useState([\n    {\n      title: 'Top Ten Most Read',\n      id: Math.random(),\n      isChecked: false\n    },{\n      title: 'Featured Insights',\n      id: Math.random(),\n      isChecked: false\n    },{\n      title: 'BCG Henderson Institute',\n      id: Math.random(),\n      isChecked: false\n    },{\n      title: 'Change Your Trajectory',\n      id: Math.random(),\n      isChecked: false\n    },{\n      title: 'Leadership By Design',\n      id: Math.random(),\n      isChecked: false\n    },{\n      title: 'Next-Gen Work',\n      id: Math.random(),\n      isChecked: false\n    },{\n      title: 'Perspectives on Strategy and Value',\n      id: Math.random(),\n      isChecked: false\n    },{\n      title: 'Shape the Future of Health Cars',\n      id: Math.random(),\n      isChecked: false\n    }\n  ])\n\n  useEffect(() => {\n    setShowSubmitButton(subscriptions.length > 0);\n\n    if (subscriptions.length === 0) setShowModal(false);\n  }, [subscriptions]);\n  \n  useEffect(() => {\n    let _subscriptions = cards.filter(card => {\n      return card.isChecked === true;\n    });\n    \n    setSubscriptions(_subscriptions);\n  }, [cards]);\n\n  const clearSelections = () => {\n    let _cards = [...cards];\n    _cards.map(card => {\n      return card.isChecked = false;\n    })\n    setCards(_cards);\n  }\n\n  const closeModal = () => {\n    setShowModal(false);\n  }\n\n  const updateSubscriptionCheckedState = (id, isSubscribed) => {\n    let tmp = [...cards];\n    tmp.find(card => card.id === id).isChecked = isSubscribed;\n    setCards(tmp);\n  }\n  \n  return (\n    <>\n      <div className=\"top-of-page\">\n        <InnerWrap>\n          <h1>Subscriptions</h1>\n          <div className=\"subtitle\">Stay connected with BCG's latest content. Select from our newsletters below and enter your email to subscribe.</div>\n          <h2>Featured Newsletters</h2>\n        </InnerWrap>\n      </div>\n\n      <div className=\"subscriptions\">\n        <InnerWrap>\n          {cards.map(card => <SubscriptionCard \n                               key={card.id} \n                               id={card.id} \n                               isChecked={card.isChecked} \n                               handleUpdateSubscription={updateSubscriptionCheckedState} \n                               title={card.title}/>)}\n        </InnerWrap>\n      </div>\n\n      {showModal && <SubscribeModal subscriptions={subscriptions} closeModal={closeModal} onUnsubscribe={updateSubscriptionCheckedState}/>}\n      <SubscribeButton checkForSubscriptions={() => { setShowModal(true) }} isClickable={showSubmitButton} onClearSelection={clearSelections}/>\n\n      <div className=\"extra-stuff\">\n        <InnerWrap>\n          <div className=\"column\">\n            <h2>E-Alerts</h2>\n            <p>(Monthly) The latest BCG content, curated based on your specified areas of interest. Select your topics below</p>\n            <div class=\"dropdown\"> Select Industries</div>\n            <div class=\"dropdown\"> Select Business Topic</div>\n          </div>\n          <div className=\"column\">\n            <h2>Regional Publications</h2>\n            <input type=\"checkbox\" />\n            <label>BCG Bytes from Australia and New Zealand</label>\n            <p className=\"lighter\">(Biweekly) Stay connected to ANZ's business updates and regional focus topics.</p>\n          </div>\n        </InnerWrap>\n      </div>\n    </>\n   )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}